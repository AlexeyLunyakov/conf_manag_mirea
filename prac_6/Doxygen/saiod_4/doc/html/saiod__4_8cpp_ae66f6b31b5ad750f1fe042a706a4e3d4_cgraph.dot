digraph "main"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="main",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Main function."];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="bts_menu",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$saiod__4_8cpp.html#a9bdaf36a1d8817b2e4101c3e559cf7c4",tooltip="Visual program control menu."];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="buildBinTree",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#a3042233048ecf144d3b451c7b494ac89",tooltip="BTS construction function."];
  Node3 -> Node3 [color="steelblue1",style="solid"];
  Node1 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="Leaf_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#ae452dc0ed5ba24ddfd4a9aac2c4b769e",tooltip="Function to calculate the number of leaves in a tree."];
  Node4 -> Node4 [color="steelblue1",style="solid"];
  Node1 -> Node1 [color="steelblue1",style="solid"];
  Node1 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="MaxValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#a1bd9943061673b5b3fab696eeb530119",tooltip="Function for finding the maximum element of BTS."];
  Node5 -> Node5 [color="steelblue1",style="solid"];
  Node1 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="MaxValue_del",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#a604bd83200a602624c8dbcab70a67862",tooltip="Function to remove the maximum element of BTS."];
  Node6 -> Node6 [color="steelblue1",style="solid"];
  Node1 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="Node_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#a80ca44fc17c9eaf0739339c542dea2b5",tooltip="Function to calculate the number of nodes in a tree."];
  Node7 -> Node7 [color="steelblue1",style="solid"];
  Node1 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="print_BT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#af9ba7783d3fba7bab387f7886a7d81d7",tooltip="BTS printing function."];
  Node8 -> Node8 [color="steelblue1",style="solid"];
  Node1 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="ReverseBypass_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#aad9b03133e03d17935569dbd667c8fba",tooltip="Function to calculate the sum of values in leaves using reverse tree traversal."];
  Node9 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="main_summ",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bts__sourse_8hpp.html#abd9773ca3a3fbd276000a6041aeb6307",tooltip="Auxiliary variable storage function."];
  Node9 -> Node9 [color="steelblue1",style="solid"];
}
